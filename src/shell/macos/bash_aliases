#!/bin/bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Lock screen.

alias afk="osascript -e 'tell application \"System Events\" to sleep'"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Shorter commands for `Homebrew`.

alias brewd="brew doctor"
alias brewi="brew install"
alias brewr="brew uninstall"
alias brews="brew search"
alias brewu="brew update --quiet \
                && brew upgrade \
                && brew cleanup"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Clear DNS cache.

alias clear-dns-cache="sudo dscacheutil -flushcache; \
                       sudo killall -HUP mDNSResponder"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Empty the trash, the main HDD and on all mounted volumes,
# and clear Appleâ€™s system logs to improve shell startup speed.

alias empty-trash="sudo rm -frv /Volumes/*/.Trashes; \
                   sudo rm -frv ~/.Trash; \
                   sudo rm -frv /private/var/log/asl/*.asl; \
                   sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Hide/Show desktop icons.

alias hide-desktop-icons="defaults write com.apple.finder CreateDesktop -bool false \
                            && killall Finder"

alias show-desktop-icons="defaults write com.apple.finder CreateDesktop -bool true \
                            && killall Finder"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Open from the terminal.

alias o="open"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Update applications and CLTs.

alias u="sudo softwareupdate --install --all \
            && brew update \
            && brew upgrade \
            && brew cleanup"

function dnames-fn {
	for ID in `docker ps | awk '{print $1}' | grep -v 'CONTAINER'`
	do
    	docker inspect $ID | grep Name | head -1 | awk '{print $2}' | sed 's/,//g' | sed 's%/%%g' | sed 's/"//g'
	done
}
function docker-start {

if [ -n "$(docker ps -a -q -f id=$1)" ]; then
    if [ -n "$(docker ps -aq -f status=exited -f id=$1)" ]; then
        # cleanup
        echo 'status exited'
    else
        echo $1;
            [ ! -z "$1" ] && docker start "$1" || echo docker start $(docker ps -qa)
    fi
else
    if [ ! -z "$1" ]; then
        echo "Container are not exists: ${1}";
    else
        docker start $(docker ps -qa)
    fi
fi

}
function docker-restart {
    if [ -n "$(docker ps -a -q -f id=$1)" ]; then
        if [ -n "$(docker ps -aq -f status=exited -f id=$1)" ]; then
            # cleanup
            echo 'status exited'
        else
            echo $1;
                [ ! -z "$1" ] && docker restart "$1" || echo docker restart $(docker ps -qa)
        fi
    else
        if [ ! -z "$1" ]; then
            echo "Container are not exists: ${1}";
        else
            docker restart $(docker ps -qa)
        fi
    fi
}
function dockerps() {
    docker ps --format "table {{.ID}}\t{{.Image}}\t{{.Names}}\t{{.Status}}"
}
function dexec {
        if [ -n "$(docker ps -a -q -f id=$1)" ]; then
            if [ -n "$(docker ps -aq -f status=exited -f id=$1)" ]; then
                # cleanup
                echo 'status exited'
            else
                echo $1;
                    [ ! -z "$1" ] && docker exec -it "$1" sh
            fi
        fi

}
function kill-any() {
    kill -9 $(pgrep -f $1)
}


# Add this to your ~/.bashrc or ~/.bash_aliases
vpn() {
    local config_path="$HOME/.ssh/ic.ovpn"

    case "$1" in
        "connect"|"start")
            openvpn3 session-start --config "$config_path"
            ;;
        "disconnect"|"stop")
            openvpn3 session-manage --config "$config_path" --disconnect
            ;;
        "restart")
            openvpn3 session-manage --config "$config_path" --restart
            ;;
        *)
            echo "Usage: vpn [connect|disconnect|restart]"
            ;;
    esac
}
# Bash completion for vpn function
_vpn_completion() {
    local cur=${COMP_WORDS[COMP_CWORD]}
    local commands="connect disconnect restart start stop"

    COMPREPLY=($(compgen -W "$commands" -- "$cur"))
}

# Register the completion function
complete -F _vpn_completion vpn

alias poc="bash /home/sotiris/Documents/projects/bash_scripts/download_from_poc.sh"
alias docker-export="bash ~/Documents/projects/bash_scripts/docker_mysql_export.sh"
alias docker-import="bash ~/Documents/projects/bash_scripts/docker_mysql_import.sh"
alias docker-create="bash ~/Documents/projects/bash_scripts/docker_mysql_create.sh"
alias dstart=docker-start
alias drestart=docker-restart
alias dnames=dnames-fn
alias dps=dockerps
alias killer=kill-any
